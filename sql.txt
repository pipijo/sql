# 1、查询"01"课程比"02"课程成绩高的学生的信息及课程分数
select s.*,sc1.s_score from student s inner join (select * from score where c_id = 1) sc1 on s.s_id = sc1.s_id inner join (select * from score where c_id = 2) sc2 on s.s_id = sc2.s_id where sc1.s_score > sc2.s_score;
# 2、查询"01"课程比"02"课程成绩低的学生的信息及课程分数
select s.*,sc2.s_score from student s inner join (select * from score where c_id = 1) sc1 on s.s_id = sc1.s_id inner join (select * from score where c_id = 2) sc2 on s.s_id = sc2.s_id where sc1.s_score < sc2.s_score;
# 3、查询平均成绩大于等于60分的同学的学生编号和学生姓名和平均成绩
select s.s_id,s.s_name,round(avg_score,2) as avg_score from student s inner join (select s_id,avg(s_score) as avg_score from score group by s_id having avg_score >= 60) c on s.s_id = c.s_id;
# 4、查询平均成绩小于60分的同学的学生编号和学生姓名和平均成绩(包括有成绩的和无成绩的)
select s.s_id,s.s_name,ifnull(round(avg_score,2),0) as avg_score from student s left join (select s_id,avg(s_score) as avg_score from score group by s_id) c on s.s_id = c.s_id where avg_score < 60 or avg_score is null ;
# 5、查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩
select s.s_id,s.s_name,ifnull(cnt_course,0) as cnt_course,ifnull(sum_score,0) as sum_score from student s left join (select s_id ,count(*) as cnt_course,sum(s_score) as sum_score from score group by s_id) sc on s.s_id =sc.s_id;
# 6、查询"李"姓老师的数量
select count(*) from teacher where t_name like '李%';
# 7、询学过"张三"老师授课的同学的信息
select * from student s where s.s_id in (select distinct s_id from score sc inner join (select c_id from course c inner join teacher t on c.t_id = t.t_id where t.t_name = '张三') t on sc.c_id = t.c_id)
# 8、查询没学过"张三"老师授课的同学的信息
select s.* from student s where s_id not in (select distinct s_id from score sc inner join (select c_id from course c inner join teacher t on c.t_id = t.t_id where t_name = '张三') t on sc.c_id = t.c_id);
# 9、查询学过编号为"01"并且也学过编号为"02"的课程的同学的信息
select s.* from student s where s_id in (select s_id from score where c_id in (1,2) group by s_id having count(*) = 2);
# 10、查询学过编号为"01"但是没有学过编号为"02"的课程的同学的信息
select s.* from student s where s_id in (select s_id from score where c_id = 1 and s_id not in (select s_id from score where c_id = 2));
# 11、查询没有学全所有课程的同学的信息
select * from student where s_id not in (select s_id from score group by s_id having count(*) = (select count(*) from course));
# 12、查询至少有一门课与学号为"01"的同学所学相同的同学的信息
select * from student where s_id in (select distinct s_id from score s inner join (select c_id from score where s_id = 1) t on s.c_id = t.c_id);
# 13、查询和"01"号的同学学习的课程完全相同的其他同学的信息
select * from student where s_id in (select s_id from score s inner join (select c_id from score where s_id = 1) t1 on s.c_id = t1.c_id where s_id != 1 group by s_id having count(*) = (select count(*) from score where s_id = 1));
# 14、查询没学过"张三"老师讲授的任一门课程的学生姓名
select s_name from student where s_id not in (select s_id from score sc inner join (select c_id from course c inner join teacher t on c.t_id = t.t_id where t_name = '张三') t on sc.c_id = t.c_id);
# 15、查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩
select s.s_id,s.s_name,round(avg(s_score), 2) as avg_score from student s inner join (select s_id from score where s_score < 60 group by s_id having count(*) >= 2) t on s.s_id = t.s_id inner join score sc on s.s_id = sc.s_id group by s.s_id;
# 16、检索"01"课程分数小于60，按分数降序排列的学生信息
select s.*,s_score as sc1 from student s inner join (select s_id,s_score from score where c_id = 1 and s_score < 60) t on s.s_id = t.s_id order by sc1 desc;
# 17、按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩

# 18、查询各科成绩最高分、最低分和平均分，以如下形式显示：

# 19、按各科成绩进行排序，并显示排名

# 20、查询学生的总成绩并进行排名